@{
	ViewData["Title"] = "Preferencias";
	ViewData["BodyId"] = "preferenceScreen";
	ViewData["NotFundMessage"] = "Nenhum usuário encontrado!";
}

<div class="row headerRow">
	<div class="col-sm-12 col-md-4 col-lg-4">
		<div class="card-header">
			<h1 class="subtitle">PREFERENCIAS</h1>
		</div>
	</div>

	<div class="col-sm-6 col-md-4 col-lg-4">
    @using (Html.BeginForm("GetUserWithFilter", "Preference"
			, FormMethod.Get, new { @class="filterForm" }))
		{
			<input name="InputedCriterie" class="defaultInput" placeholder="Pesquisar"/>
			
			<button class="defaultButton searchButton" type="submit"><i class='bx bx-search'></i></button>
		}
  </div>

	<div class="col-sm-6 col-md-4 col-lg-4">
		<button class="defaultButton searchButton" onclick="openModal('#inviteUserModal')"><i class='bx bx-user-plus'></i> Novo usuário</button>
  </div>
</div>

<div class="row">
	<div class="col-12 card-body backGroundItem scrollCard">
		<div class="userCards">
			@{
				if (Model.UserGroup.Count == 0)
				{
					<partial name="../Modules/_NotFundItem.cshtml" />
				}
				else
				{
					@foreach (var user in Model.UserGroup)
					{
						<div class="col-sm-12 col-md-4 col-lg-4 profileCard shadow">
							<div class="backgroundIconUser">
								<i class="bx bxs-user-circle"></i>
							</div>
							
							<div class="buttonPositon">
								<div class="editButton" onClick="fillDeleteModal('@(user.Id)', '#deleteModal')">
									<i class="bx bx-trash"></i>
								</div>
							</div>

							<div class="userCardContext">
								<p>
									<label class="boldedGreyText">Nome: </label> 
									<label>@user.Nick</label>
								</p>
									
								<p>
									<label class="boldedGreyText">Email: </label>
									<label>@user.Email</label>
								</p>
							</div>
						</div>
					}
				}
			}
		</div>
	</div>
</div>

<partial name="../Modules/_InviteUserModal.cshtml" />
<partial name="../Modules/_DeleteModal.cshtml" />